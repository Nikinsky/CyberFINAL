# nginx.conf - полная конфигурация
user nginx;
worker_processes auto;  # Автоматическое определение количества процессоров
pid /var/run/nginx.pid;

# Настройки логирования
error_log /var/log/nginx/error.log warn;

# Настройки обработки соединений
events {
    worker_connections 1024;  # Максимум одновременных соединений
    multi_accept on;          # Принимать несколько соединений одновременно
    use epoll;                # Эффективный механизм обработки соединений
}

http {
    # Основные MIME типы
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Формат логов
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Настройки доступа и производительности
    access_log /var/log/nginx/access.log main;
    sendfile on;           # Эффективная передача файлов
    tcp_nopush on;         # Оптимизация отправки данных
    tcp_nodelay on;        # Отключение задержек при передаче

    # Тайм-ауты
    keepalive_timeout 65;  # Время удержания соединения
    types_hash_max_size 2048;
    server_tokens off;     # Скрытие версии nginx

    # Компрессия
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml
               application/json application/javascript
               application/rss+xml application/atom+xml
               image/svg+xml;

    # Upstream для бэкенда и фронтенда
    upstream backend {
        server backend:8000;
    }

    upstream frontend {
        server frontend:3000;
    }

    # Основной server блок
    server {
        listen 80;
        server_name localhost;

        # Проксирование фронтенда
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # API роуты
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}